<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vincent blog (文章分类：python)</title><link>https://wisonwang.github.io/</link><description></description><atom:link href="https://wisonwang.github.io/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:fangfu2012@gmail.com"&gt;vincent wang&lt;/a&gt; </copyright><lastBuildDate>Fri, 13 Mar 2020 04:45:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>python 基础一：基础语法和解释运行</title><link>https://wisonwang.github.io/posts/python-ji-chu-yi-ji-chu-yu-fa-he-jie-shi-zhi-xing/</link><dc:creator>vincent wang</dc:creator><description>&lt;div id="outline-container-org4e8058a" class="outline-2"&gt;
&lt;h2 id="org4e8058a"&gt;认识python&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4e8058a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgea44571" class="outline-4"&gt;
&lt;h4 id="orgea44571"&gt;python是解释执行的动态语言&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgea44571"&gt;
&lt;p&gt;
python一般是运行解释器解析python文件（模块）来运行，或者可以通过调用（python -i）进行交互式开发（边写代码，边运行，是不是很酷？）&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
作为初学者，可以先通过“pip install ipython”安装ipython，然后通过调用“ipython”来启动交互界面，ipython是python交互式开发的增强工具，提供了自动补全，语法高亮的功能，可以更好的进行更好的进行交互式开发。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
后面大部分提供的代码示例都可以放到ipython里演示。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wisonwang.github.io/posts/python-ji-chu-yi-ji-chu-yu-fa-he-jie-shi-zhi-xing/"&gt;更多…&lt;/a&gt; (剩余 3 分钟去阅读)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://wisonwang.github.io/posts/python-ji-chu-yi-ji-chu-yu-fa-he-jie-shi-zhi-xing/</guid><pubDate>Sun, 09 Feb 2020 09:07:45 GMT</pubDate></item><item><title>使用python还是scala开发spark程序？</title><link>https://wisonwang.github.io/posts/spark-with-python-or-scala/</link><dc:creator>vincent wang</dc:creator><description>&lt;div&gt;&lt;p&gt;
spark 官方提供了python,java, scala,R 三种语言的封装，scala和java都建立jvm可以相互调用，R一般人用的不多，如下比较一下python
和scala开发spark程序的优缺点。
&lt;/p&gt;

&lt;div id="outline-container-org8ed0872" class="outline-2"&gt;
&lt;h2 id="org8ed0872"&gt;scala和python开发spark程序各自优点&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8ed0872"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org82b5b95" class="outline-3"&gt;
&lt;h3 id="org82b5b95"&gt;pyspark优点&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org82b5b95"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;动态语言开发效率高，工程难度低&lt;/li&gt;
&lt;li&gt;算法类库丰富，易于移移植现有算法到spark平台&lt;/li&gt;
&lt;li&gt;工具支持丰富，包括jupyter notebook之类的工具，能够做到程序结果可视化，方便调优&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org50bd117" class="outline-3"&gt;
&lt;h3 id="org50bd117"&gt;pyspark缺点&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org50bd117"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;性能差： 动态语言载加上通过py4j来和spark交互的，在计算量很大的情况下慢的可怕；&lt;/li&gt;
&lt;li&gt;不能使用全部spark api： 因为是通过py4j调用，需要必要的封装（pyspark），不能像scala那样和java可以直接调用， 导致不能直接调用java或者scala类库。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://wisonwang.github.io/posts/spark-with-python-or-scala/"&gt;更多…&lt;/a&gt; (剩余 1 分钟去阅读)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>pyspark</category><category>python</category><category>scala</category><category>spark</category><guid>https://wisonwang.github.io/posts/spark-with-python-or-scala/</guid><pubDate>Tue, 17 Apr 2018 08:16:02 GMT</pubDate></item></channel></rss>